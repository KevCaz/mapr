% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/util_github.r
\name{spocc_togeojson}
\alias{spocc_togeojson}
\title{Convert spatial data files to GeoJSON from various formats.}
\usage{
spocc_togeojson(input, destpath = "~/", outfilename = "myfile")
}
\arguments{
\item{input}{The file being uploaded, path to the file on your machine.}

\item{destpath}{Destination for output geojson file. Defaults to your root
directory ('~/').}

\item{outfilename}{The output file name, without file extension.}
}
\description{
We use the Ogre web API. Ogre currently has an output size limit of 15MB.
See here \url{http://ogre.adc4gis.com/} for info on the Ogre web API.

Note that for Shapefiles, GML, MapInfo, and VRT, you need to send zip files
to Ogre. For other file types (.bna, .csv, .dgn, .dxf, .gxt, .txt, .json,
.geojson, .rss, .georss, .xml, .gmt, .kml, .kmz) you send the actual file with
that file extension.

If you're having trouble rendering geoJSON files, ensure you have a valid
geoJSON file by running it through a geoJSON linter \url{http://geojsonlint.com/}.
}
\examples{
\dontrun{
file <- '/Users/scottmac2/Downloads/taxon-placemarks-2441176.kml'

# KML type file
spocc_togeojson(file, outfilename='kml_web')

# Shp type file input is a zipped shp bundle
file <- '~/github/sac/bison.zip'
spocc_togeojson(file, outfilename='shp_web')

# Get data and save map data
splist <- c('Accipiter erythronemius', 'Junco hyemalis', 'Aix sponsa')
keys <- sapply(splist, function(x) gbif_lookup(name=x, kingdom='plants')$speciesKey,
   USE.NAMES=FALSE)
out <- occ_search(keys, hasCoordinate=TRUE, limit=50, return='data')
dat <- ldply(out)
datgeojson <- spocc_stylegeojson(input=dat, var='name',
   color=c('#976AAE','#6B944D','#BD5945'), size=c('small','medium','large'))

# Put into a github repo to view on the web
write.csv(datgeojson, '~/github/sac/mygeojson/rgbif_data.csv')
file <- '~/github/sac/mygeojson/rgbif_data.csv'
spocc_togeojson(file, destpath='~/github/sac/mygeojson/',
   outfilename='rgbif_data')

# Using rCharts' function spocc_create_gist
write.csv(datgeojson, '~/my.csv')
file <- '~/my.csv'
spocc_togeojson(input=file, outfilename='my')
spocc_create_gist('~/my.geojson', description = 'Map of three bird species occurrences')
}
}
\seealso{
\code{spocc_stylegeojson}
}

